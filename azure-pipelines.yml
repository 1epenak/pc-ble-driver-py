trigger:
- test-azure

jobs:
  # Linux
  - job: Linux_Build
    variables:
      # conda_version: 'Linux-x86_64'
      # conda_root: '$(Agent.HomeDirectory)/miniconda3'
      VCPKG_ROOT: '$(Agent.HomeDirectory)/vcpkg'
      python_arch: 'x64'
      triplet: 'x64-linux'
    strategy:
      matrix:
        linux_python_27:
          PYTHON_VERSION: 2.7
        linux_python_35:
          PYTHON_VERSION: 3.5
        linux_python_36:
          PYTHON_VERSION: 3.6
        linux_python_37:
          PYTHON_VERSION: 3.7
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        sudo apt-get update
        sudo apt-get install ninja-build swig libudev-dev
      displayName: 'Install toolchain'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
        architecture: 'x64'
    # - script: |
    #     which python
    #     which pip
    #     python --version
    #     pip --version
    #     find /opt/hostedtoolcache/Python
    #   displayName: 'Dig python'
    # - script: |
    #     wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$(conda_version).sh -O $(Agent.HomeDirectory)/miniconda.sh
    #     bash $(Agent.HomeDirectory)/miniconda.sh -b -p $(conda_root)
    #   displayName: 'Install conda'
    # - script: |
    #     $(conda_root)/bin/conda create -yq -n python$(PYTHON_VERSION) python=$(PYTHON_VERSION)
    #   displayName: 'Install Python $(PYTHON_VERSION)'
    - script: |
        git clone https://github.com/NordicPlayground/vcpkg.git $(VCPKG_ROOT)
        $(VCPKG_ROOT)/bootstrap-vcpkg.sh
      displayName: 'Install vcpkg'
    - script: |
        export PATH=$VCPKG_ROOT:$PATH
        vcpkg install nrf-ble-driver:$(triplet)
      displayName: 'Install nrf-ble-driver'
    - script: |
        pip install -r requirements-dev.txt
        python setup.py bdist_wheel --build-type Release
      displayName: 'Build'
    - bash: |
        cp -R dist/*.whl "$(Build.ArtifactStagingDirectory)"
      displayName: 'Copy artifacts'
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'waylandCI'
        repositoryName: 'NordicSemiconductor/pc-ble-driver-py'
        action: 'edit'
        tagSource: 'Git tag'
        tag: '$(Build.SourceBranchName)'
        assetUploadMode: 'replace'
        isDraft: 'true'
        addChangeLog: 'false'
      condition: ne(variables['Build.Reason'], 'PullRequest')


  # macOS
  - job: macOS_Build
    variables:
      # conda_version: 'MacOSX-x86_64'
      # conda_root: '$(Agent.HomeDirectory)/miniconda3'
      VCPKG_ROOT: '$(Agent.HomeDirectory)/vcpkg'
      python_arch: 'x64'
      triplet: 'x64-osx'
    strategy:
      matrix:
        mac_python_27:
          PYTHON_VERSION: 2.7
        mac_python_35:
          PYTHON_VERSION: 3.5
        mac_python_36:
          PYTHON_VERSION: 3.6
        mac_python_37:
          PYTHON_VERSION: 3.7
    pool:
      vmImage: 'macos-10.13'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
        architecture: 'x64'
    # - script: |
    #     python_path=`which python`
    #     python_dir=`dirname python`
    #     python_incl=${python_dir}/include/python$(PYTHON_VERSION)
    #     python_lib=
    #     which pip
    #     DYLD_PRINT_LIBRARIES=1 python --version
    #     pip --version
    #     ls "/Users/vsts/hostedtoolcache/Python$(PYTHON_VERSION).*/x64/include/python2.7"
    #   displayName: 'Dig python'
    - script: |
        ls /Applications
        sudo xcode-select -s /Applications/Xcode_10.1.app
      displayName: 'Install toolchain'
    - script: |
        brew install gcc swig
      displayName: 'Install toolchain'
    # - script: |
    #     wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$(conda_version).sh -O $(Agent.HomeDirectory)/miniconda.sh
    #     bash $(Agent.HomeDirectory)/miniconda.sh -b -p $(conda_root)
    #   displayName: 'Install conda'
    # - script: |
    #     $(conda_root)/bin/conda create -yq -n python$(PYTHON_VERSION) python=$(PYTHON_VERSION)
    #   displayName: 'Install Python $(PYTHON_VERSION)'
    - script: |
        git clone https://github.com/NordicPlayground/vcpkg.git $(VCPKG_ROOT)
        $(VCPKG_ROOT)/bootstrap-vcpkg.sh
      displayName: 'Install vcpkg'
    - script: |
        export PATH=$VCPKG_ROOT:$PATH
        vcpkg install nrf-ble-driver:$(triplet)
      displayName: 'Install nrf-ble-driver'
    - script: |
        # export PATH=$(conda_root)/envs/python$(PYTHON_VERSION)/bin:$PATH
        export
        pip install -r requirements-dev.txt
        python setup.py bdist_wheel --build-type Release -- -DCMAKE_OSX_DEPLOYMENT_TARGET=10.12
      displayName: 'Build'
    - bash: |
        cp -R dist/*.whl "$(Build.ArtifactStagingDirectory)"
      displayName: 'Copy artifacts'
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'waylandCI'
        repositoryName: 'NordicSemiconductor/pc-ble-driver-py'
        action: 'edit'
        tagSource: 'Git tag'
        tag: '$(Build.SourceBranchName)'
        assetUploadMode: 'replace'
        isDraft: 'true'
        addChangeLog: 'false'
      condition: ne(variables['Build.Reason'], 'PullRequest')

  # Windows
  - job: Windows_Build
    variables:
      # conda_root: '$(Agent.HomeDirectory)\miniconda3'
      VCPKG_ROOT: '$(Agent.HomeDirectory)\vcpkg'
    strategy:
      matrix:
        win64_python_27:
          PYTHON_VERSION: 2.7
          python_arch: 'x64'
          triplet: 'x64-windows'
        win64_python_35:
          PYTHON_VERSION: 3.5
          python_arch: 'x64'
          triplet: 'x64-windows'
        win64_python_36:
          PYTHON_VERSION: 3.6
          python_arch: 'x64'
          triplet: 'x64-windows'
        win64_python_37:
          PYTHON_VERSION: 3.7
          python_arch: 'x64'
          triplet: 'x64-windows'
        win32_python_27:
          PYTHON_VERSION: 2.7
          python_arch: 'x86'
          triplet: 'x86-windows'
        win32_python_35:
          PYTHON_VERSION: 3.5
          python_arch: 'x86'
          triplet: 'x86-windows'
        win32_python_36:
          PYTHON_VERSION: 3.6
          python_arch: 'x86'
          triplet: 'x86-windows'
        win32_python_37:
          PYTHON_VERSION: 3.7
          python_arch: 'x86'
          triplet: 'x86-windows'
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
        architecture: '$(python_arch)'
    # - bash: |
    #     which python
    #     which pip
    #     python --version
    #     pip --version
    #     find /c/hostedtoolcache/Python
    #   displayName: 'Dig python'
    - script: |
        choco install -y --x86 swig
        # choco install -y miniconda3 --params="'/D:$(conda_root)'"
      # condition: ne(variables['PYTHON_VERSION'], '2.7')
      displayName: 'Install toolchain on Windows'
    # - script: |
    #     choco install -y --x86 swig
    #     # choco install -y miniconda3 --params="'/D:$(conda_root)'"
    #     choco install -y vcpython27
    #   condition: eq(variables['PYTHON_VERSION'], '2.7')
    #   displayName: 'Install toolchain on Windows for Python 2.7'
    # - script: |
    #     $(conda_root)\Scripts\conda create -yq -n python$(PYTHON_VERSION) python=$(PYTHON_VERSION)
    #   condition: eq(variables['python_arch'], 'x64')
    #   displayName: 'Install Python $(PYTHON_VERSION)'
    # - script: |
    #     call set CONDA_FORCE_32BIT=1
    #     $(conda_root)\Scripts\conda create -yq -n python$(PYTHON_VERSION) python=$(PYTHON_VERSION)
    #   condition: eq(variables['python_arch'], 'x86')
    #   displayName: 'Install Python $(PYTHON_VERSION)'
    - script: |
        git clone https://github.com/NordicPlayground/vcpkg.git $(VCPKG_ROOT)
        $(VCPKG_ROOT)\bootstrap-vcpkg.bat
      displayName: 'Install vcpkg'
    - script: |
        set PATH=$(VCPKG_ROOT);%PATH%
        vcpkg install nrf-ble-driver:$(triplet)
      displayName: 'Install nrf-ble-driver'
    - script: |
        # call $(conda_root)\Scripts\activate python$(PYTHON_VERSION)
        pip install -r requirements-dev.txt
        python setup.py bdist_wheel --build-type Release -- -G "Visual Studio 15 2017 Win64"
      condition: eq(variables['python_arch'], 'x64')
      displayName: 'Build'
    - script: |
        # call $(conda_root)\Scripts\activate python$(PYTHON_VERSION)
        pip install -r requirements-dev.txt
        python setup.py bdist_wheel --build-type Release -- -G "Visual Studio 15 2017"
      condition: eq(variables['python_arch'], 'x86')
      displayName: 'Build'
    - bash: |
        cp -R dist/*.whl "$(Build.ArtifactStagingDirectory)"
      displayName: 'Copy artifacts'
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'waylandCI'
        repositoryName: 'NordicSemiconductor/pc-ble-driver-py'
        action: 'edit'
        tagSource: 'Git tag'
        tag: '$(Build.SourceBranchName)'
        assetUploadMode: 'replace'
        isDraft: 'true'
        addChangeLog: 'false'
      condition: ne(variables['Build.Reason'], 'PullRequest')

  # - job: Test
  #   dependsOn: [
  #     Build,
  #   ]
  #   strategy:
  #     matrix:
  #       linux:
  #         osType: 'linux'
  #       mac:
  #         osType: 'mac'
  #       win64:
  #         osType: 'win64'
  #       win32:
  #         osType: 'win32'
  #   pool: server
  #   steps:
  #   - task: InvokeRESTAPI@1
  #     displayName: Test
  #     inputs:
  #       connectionType: 'connectedServiceName'
  #       serviceConnection: 'waylandJenkins'
  #       method: 'POST'
  #       urlSuffix: 'view/pc-nrfjprog-js/job/pc-nrfjprog-js-$(osType)/buildWithParameters?BRANCH=$(Build.SourceBranch)&VSTS_URL=$(system.CollectionUri)&TOKEN=$(system.AccessToken)&PROJECT_ID=$(system.teamProjectId)&HUB_NAME=$(system.hostType)&PLAN_ID=$(system.planId)&TASK_ID=$(system.taskInstanceId)&JOB_ID=$(system.jobId)'
  #       waitForCompletion: 'true'
  #     condition: ne(variables['Build.Reason'], 'PullRequest')
